name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.11'
            cache: 'pip' # caching pip dependencies

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8  

      - name: Run lint
        run: flake8 .  

  test:
    runs-on: self-hosted
    needs: lint  # Запускаем тесты только после успешной проверки кодстиля
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest
  

  deploy:
    runs-on: self-hosted
    needs: test

    steps:
      - name: Clean repository
        run: |
          if [ "$(ls -A /home/user/actions-runner/_work/backend/backend)" ]; then
            echo "backend folder is not empty. Proceeding with cleaning..."
            rm -rf /home/user/actions-runner/_work/backend/backend/*
          else
            echo "backend folder is already empty. Skipping cleaning."
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove previous containers
        run: |
          if docker ps -a --format '{{.Names}}' | grep -q backend; then
            docker stop backend && docker rm backend
          else
            echo "Container backend not found."
            continue
          fi
          echo "Container backend was removed."

      - name: Build and start docker containers
        run: |
          docker build -t backend_image .
          docker run -d \
          -v backend_data:/var/lib/backend_data \
          -p 8000:8000 \
          --name backend \
          --network appnet \
          --restart=always \
          backend_image

      - name: Finish
        run: echo "Deployment successful!"
